<h1>{{mealPlan.name}}</h1>
<ul>
  {{#each mealPlan.recipes}}
    <li>
      <h4>{{this.title}}</h4>
      <p>Ingredients: {{this.ingredients}}</p>
      <button onclick="removeRecipe('{{../mealPlan._id}}', '{{this._id}}')">Remove</button>
    </li>
  {{/each}}
</ul>

<form id="addRecipeForm">
  <label for="title">Recipe Title:</label>
  <input type="text" id="title" name="title" required />

  <label for="ingredients">Ingredients (comma separated):</label>
  <input type="text" id="ingredients" name="ingredients" required />

  <label for="instructions">Instructions:</label>
  <textarea id="instructions" name="instructions"></textarea>

  <button type="submit">Add Recipe</button>
</form>

<script>
  document.getElementById('addRecipeForm').addEventListener('submit', async (event) => {
    event.preventDefault();
    const formData = new FormData(event.target);
    const recipe = {
      title: formData.get('title'),
      ingredients: formData.get('ingredients').split(',').map((i) => i.trim()),
      instructions: formData.get('instructions'),
    };

    const response = await fetch(`/api/meal-plans/{{mealPlan._id}}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ $push: { recipes: recipe } }),
    });

    if (response.ok) {
      alert('Recipe added!');
      location.reload();
    } else {
      alert('Failed to add recipe');
    }
  });

  async function removeRecipe(planId, recipeId) {
    const response = await fetch(`/api/meal-plans/${planId}/recipes/${recipeId}`, {
      method: 'DELETE',
    });
    if (response.ok) {
      alert('Recipe removed!');
      location.reload();
    } else {
      alert('Failed to remove recipe');
    }
  }
  // Add a recipe to a meal plan
router.put('/:id', async (req, res) => {
  try {
    const updatedMealPlan = await MealPlan.findByIdAndUpdate(
      req.params.id,
      { $push: { recipes: req.body.recipe } },
      { new: true }
    );
    res.json(updatedMealPlan);
  } catch (err) {
    res.status(500).json(err);
  }
});

// Remove a recipe from a meal plan
router.delete('/:planId/recipes/:recipeId', async (req, res) => {
  try {
    const updatedMealPlan = await MealPlan.findByIdAndUpdate(
      req.params.planId,
      { $pull: { recipes: { _id: req.params.recipeId } } },
      { new: true }
    );
    res.json(updatedMealPlan);
  } catch (err) {
    res.status(500).json(err);
  }
});

</script>